Learning Objectives:-
Create a yaml file containing the pod spec for the nginx pod.
Create the pod.


Your company is getting ready to launch a new website, and they need you to set up an nginx web server in their Kubernetes cluster. 
The nginx server will need to be accessible via network in the future, so you will need to expose port 80 as a containerPort for the nginx container. 
Your team has also asked you to ensure that nginx runs in quiet mode for the time being to cut down on unnecessary log output. 
You can do this by setting the command to nginx and passing the following arg to the container: -g daemon off; -q. As this nginx server belongs to the Web team, 
you will need to create it in the team's web namespace.

To summarize:

Use the nginx container image.
The container needs a containerPort of 80.
Set the command to nginx
Pass in the -g daemon off; -q args to run nginx in quiet mode.
Create the pod in the web namespace.
Once the pod is created, you should be able to find it with kubectl get pods -n web. Once the pod is created, 
you can get more information about its current status with kubectl describe pod nginx -n web.

=========================

master $ kubectl get namespace
NAME              STATUS   AGE
default           Active   9s
kube-node-lease   Active   10s
kube-public       Active   10s
kube-system       Active   11s
master $ kubectl create namespace web
namespace/web created

master $ kubectl get namespace
NAME              STATUS   AGE
default           Active   54s
kube-node-lease   Active   55s
kube-public       Active   55s
kube-system       Active   56s
web               Active   10s
master $ vi nginx.yml
master $ cat nginx.yml
apiVersion: v1
kind: Pod
metadata:
         name: nginx-pod
          labels:
                    app: nginx-app
                    spec:
                             containers:
                                      - name: nginx-ctr
                                           image: nginx:latest
                                              command: ["nginx","-g","daemon off;","-q"]
                                                 ports:
                                                            - containerPort: 8080
master $ kubectl create -f nginx.yml -n web
pod/nginx-pod created
master $ kubectl get pod -n web
  
 NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          10m


master $ kubectl describe pod nginx-pod -n web


Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  9m55s  default-scheduler  Successfully assigned web/nginx-pod to minikube
  Normal  Pulling    9m54s  kubelet, minikube  Pulling image "nginx:latest"
  Normal  Pulled     9m51s  kubelet, minikube  Successfully pulled image "nginx:latest"
  Normal  Created    9m50s  kubelet, minikube  Created container nginx-ctr
  Normal  Started    9m50s  kubelet, minikube  Started container nginx-ctr


